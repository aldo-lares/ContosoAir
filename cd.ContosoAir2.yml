# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# Uncomment this to disable auto-trigger with each commit pushed
trigger: none

resources:
    pipelines:
    - pipeline: buildContosoAir # identifier for the resource used in pipeline resource variables
      source: aldo-lares.ContosoAir # name of the pipeline that produces thenartifact
      trigger:
        branches:
          include:
            - master


pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: DownloadPipelineArtifact@2
    inputs:
      buildType: 'specific'
      project: '3f90bd77-97d0-40f1-b897-e39dabdf88cd'
      definition: '2'
      buildVersionToDownload: 'latest'
      targetPath: '$(Pipeline.Workspace)'

  - task: AzureResourceManagerTemplateDeployment@3
    inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: 'Azure Connection'
        subscriptionId: '81eb4026-8ab7-4e22-9592-1db8d55fdec3'
        action: 'Create Or Update Resource Group'
        resourceGroupName: 'ms-gruma'
        location: 'East US'
        templateLocation: 'Linked artifact'
        csmFile: '$(Pipeline.Workspace)/drop/Templates/azuredeploy.json'
        csmParametersFile: '$(Pipeline.Workspace)/drop/Templates/azuredeploy.parameters.json'
        overrideParameters: '-p_environment $(web_environment) -p_site_prefix $(web_prefix) -p_site_web_name $(web_site)'
        deploymentMode: 'Incremental'
  - task: AzureRmWebAppDeployment@4
    inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Azure Connection'
        appType: 'webApp'
        WebAppName: '$(web_prefix)-$(web_site)-$(web_environment)'
        packageForLinux: '$(Pipeline.Workspace)/**/*.zip'
